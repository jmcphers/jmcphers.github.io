<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on Jonathan McPherson</title><link>https://jmcphers.github.io/categories/programming/</link><description>Recent content in programming on Jonathan McPherson</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 03 Sep 2015 12:32:32 +0000</lastBuildDate><atom:link href="https://jmcphers.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Finding Circular Primes in Go</title><link>https://jmcphers.github.io/blog/go-circular-primes/</link><pubDate>Thu, 03 Sep 2015 12:32:32 +0000</pubDate><guid>https://jmcphers.github.io/blog/go-circular-primes/</guid><description>Recently a friend of mine posted the following programming challenge, which he&amp;rsquo;d received as an interview question.
A number is called a circular prime if it is prime and all of its rotations are primes.
For example the number 197 has two rotations: 971, and 719. Both of them are prime.
There are thirteen such primes below 100: 2, 3, 5, 7, 11, 13, 17, 31, 37, 71, 73, 79, and 97.</description></item></channel></rss>